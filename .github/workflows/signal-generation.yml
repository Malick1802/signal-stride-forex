
name: Cost-Optimized Trading Signal Generation

on:
  schedule:
    # 70%+ Win Rate Schedule: every 5 minutes for optimal analysis depth and quality
    - cron: '*/5 * * * 0,1-5'
  workflow_dispatch:
    inputs:
      force_generation:
        description: 'Force signal generation regardless of market hours'
        required: false
        default: 'false'
        type: boolean
      debug_mode:
        description: 'Enable debug logging'
        required: false
        default: 'false'
        type: boolean

jobs:
  generate-signals:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    concurrency:
      group: signal-generation
      cancel-in-progress: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Workflow Start Notification
      run: |
        echo "üöÄ OPTIMIZED GitHub Actions Signal Generation Started"
        echo "Workflow run ID: ${{ github.run_id }}"
        echo "Trigger: ${{ github.event_name }}"
        echo "Time: $(date -u)"
        echo "Repository: ${{ github.repository }}"
        echo "üí∞ NEW: Cost-optimized with reduced OpenAI usage"
        
    - name: Supabase Connectivity Diagnostics
      id: supabase-dx
      continue-on-error: true
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://ugtaodrvbpfeyhdgmisn.supabase.co' }}
      run: |
        echo "üîé Supabase connectivity diagnostics"
        echo "Host: $(echo "$SUPABASE_URL" | awk -F/ '{print $3}')"
        echo "Auth health:"
        curl -sS -o /dev/null -w "HTTP %{http_code}\n" -m 10 "$SUPABASE_URL/auth/v1/health" || true
        echo "Functions preflight:"
        curl -sS -o /dev/null -w "HTTP %{http_code}\n" -m 10 -X OPTIONS "$SUPABASE_URL/functions/v1/centralized-market-stream" || true
        echo "auth_health=$(curl -sS -o /dev/null -w "%{http_code}" -m 10 "$SUPABASE_URL/auth/v1/health")" >> $GITHUB_OUTPUT
        echo "functions_http=$(curl -sS -o /dev/null -w "%{http_code}" -m 10 -X OPTIONS "$SUPABASE_URL/functions/v1/centralized-market-stream")" >> $GITHUB_OUTPUT

    - name: Enhanced Market Hours Check
      id: market-check
      run: |
        chmod +x .github/scripts/check-market-hours.sh
        ./.github/scripts/check-market-hours.sh

    - name: Aggregate Multi-Timeframe Data
      if: steps.market-check.outputs.market_open == 'true' || github.event.inputs.force_generation == 'true'
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://ugtaodrvbpfeyhdgmisn.supabase.co' }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVndGFvZHJ2YnBmZXloZGdtaXNuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQwNjA2MTUsImV4cCI6MjA0OTYzNjYxNX0.Z-71hRCpHB0YivrsTb2kZQdObcF42BQVYIQ8_yMb_JM' }}
      run: |
        echo "üìä Aggregating tick data into multi-timeframe candles..."
        
        response=$(curl -sS -w "\n%{http_code}" --connect-timeout 10 --max-time 40 \
          -X POST "$SUPABASE_URL/functions/v1/multi-timeframe-collector" \
          -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
          -H "Content-Type: application/json" \
          -H "apikey: $SUPABASE_ANON_KEY" \
          -d '{}')
        
        http_code=$(echo "$response" | tail -n1)
        response_body=$(echo "$response" | head -n -1)
        
        echo "HTTP Status: $http_code"
        
        if [ "$http_code" -eq 200 ]; then
          echo "‚úÖ Multi-timeframe aggregation successful"
          echo "$response_body" | jq '.' || echo "$response_body"
        else
          echo "‚ö†Ô∏è Aggregation failed with status $http_code"
          echo "$response_body"
          exit 1
        fi

    - name: Generate Trading Signals (Optimized)
      if: steps.market-check.outputs.market_open == 'true' || github.event.inputs.force_generation == 'true'
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://ugtaodrvbpfeyhdgmisn.supabase.co' }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVndGFvZHJ2YnBmZXloZGdtaXNuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQwNjA2MTUsImV4cCI6MjA0OTYzNjYxNX0.Z-71hRCpHB0YivrsTb2kZQdObcF42BQVYIQ8_yMb_JM' }}
        DEBUG_MODE: ${{ github.event.inputs.debug_mode || 'false' }}
      run: |
        chmod +x .github/scripts/generate-signals.sh
        ./.github/scripts/generate-signals.sh

    - name: Update Market Data
      if: steps.market-check.outputs.market_open == 'true' || github.event.inputs.force_generation == 'true'
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://ugtaodrvbpfeyhdgmisn.supabase.co' }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVndGFvZHJ2YnBmZXloZGdtaXNuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQwNjA2MTUsImV4cCI6MjA0OTYzNjYxNX0.Z-71hRCpHB0YivrsTb2kZQdObcF42BQVYIQ8_yMb_JM' }}
        DEBUG_MODE: ${{ github.event.inputs.debug_mode || 'false' }}
      run: |
        chmod +x .github/scripts/update-market-data.sh
        ./.github/scripts/update-market-data.sh

    - name: Market Closed Notice
      if: steps.market-check.outputs.market_open == 'false' && github.event.inputs.force_generation != 'true'
      run: |
        echo "üõë Market is currently closed. Skipping optimized signal generation."
        echo "Current time: ${{ steps.market-check.outputs.current_time }}"
        echo "üí∞ When market reopens, cost-optimized generation will provide:"
        echo "  - 90% reduced OpenAI costs (gpt-4o-mini, reduced tokens)"
        echo "  - Intelligent pair filtering (top 4 pairs per run)"
        echo "  - Maintained signal quality with lower costs"
        echo "Automatic generation will resume during market hours (Sunday 21:00+ and Monday-Friday 00:00-22:00 UTC)"

    - name: Enhanced Repository Activity Tracking
      if: always()
      run: |
        echo "üîÑ Keeping repository active with enhanced tracking..."
        
        # Create activity log
        mkdir -p .github/activity
        echo "$(date -u): Workflow ${{ github.workflow }} executed (Run #${{ github.run_number }})" >> .github/activity/workflow-log.txt
        
        # Ensure we don't accumulate too many log entries (keep last 50)
        if [ -f .github/activity/workflow-log.txt ]; then
          tail -n 50 .github/activity/workflow-log.txt > .github/activity/workflow-log.tmp
          mv .github/activity/workflow-log.tmp .github/activity/workflow-log.txt
        fi
        
        echo "‚úÖ Repository activity tracking completed"
        echo "üìù Workflow logs maintained for monitoring"

    - name: Enhanced Workflow Summary
      if: always()
      run: |
        echo "üìã OPTIMIZED Workflow Execution Summary"
        echo "=============================="
        echo "Workflow: ${{ github.workflow }}"
        echo "Run ID: ${{ github.run_id }}"
        echo "Trigger: ${{ github.event_name }}"
        echo "Market Status: ${{ steps.market-check.outputs.market_open == 'true' && '‚úÖ OPEN' || 'üõë CLOSED' }}"
        echo "Execution Time: $(date -u)"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Connectivity: Auth ${{ steps.supabase-dx.outputs.auth_health || 'n/a' }}, Functions ${{ steps.supabase-dx.outputs.functions_http || 'n/a' }}"
        echo ""
        echo "üí∞ ENHANCED SIGNAL GENERATION FEATURES ACTIVE:"
        echo "  - Model: gpt-4o-mini (90% cheaper than gpt-4o)"
        echo "  - Tier 1: ALL 27 pairs analyzed locally (FREE)"
        echo "  - Tier 2/3: Only top 6-8 pairs get expensive AI analysis"
        echo "  - Reduced tokens: 500 max (down from 1200)"
        echo "  - Smart concurrency: 2 pairs max simultaneous"
        echo "  - 1-minute schedule (real-time FastForex integration)"
        echo ""
        if [ "${{ steps.market-check.outputs.market_open }}" = "true" ] || [ "${{ github.event.inputs.force_generation }}" = "true" ]; then
          echo "Actions Performed: OPTIMIZED Signal Generation ‚úÖ, Market Data Update ‚úÖ"
        else
          echo "Actions Performed: Market Hours Check Only (Market Closed)"
        fi
        
        echo "Next scheduled run: In ~1 minute (if market open)"
        echo "Expected performance: <120s execution, real-time FastForex integration"
        echo "=============================="
